//Generated by TurboLink CodeGenerator, do not edit!
#pragma once
#include "TurboLinkGrpcService.h"
#include "SLobby/LobbyClient.h"
#include "LobbyService.generated.h"

class UTurboLinkGrpcManager;

UCLASS(ClassGroup = TurboLink, BlueprintType)
class TURBOLINKGRPC_API ULobbyService : public UGrpcService
{
	GENERATED_BODY()
public:
	UFUNCTION(BlueprintCallable, Category = TurboLink)
	virtual void Connect() override;
	
	UFUNCTION(BlueprintCallable, Category = TurboLink)
	virtual EGrpcServiceState GetServiceState() const override;

	UFUNCTION(BlueprintCallable, Category = TurboLink)
	ULobbyServiceClient* MakeClient();

private:
	virtual void Shutdown() override;

	UPROPERTY()
	ULobbyServiceClient* InnerClient; 
public:
	typedef TFunction<void(const FGrpcResult& GrpcResult, const FGrpcLobbyConnectionInfo& Response)> FCreateRoomResponseLambda;
	void CallCreateRoom(const FGrpcLobbyCreateRoomRequest& Request, FCreateRoomResponseLambda ResponseLambda, FGrpcMetaData MetaData = FGrpcMetaData(), float DeadLineSeconds = 0.f);

	typedef TFunction<void(const FGrpcResult& GrpcResult, const FGrpcLobbyConnectionInfo& Response)> FJoinRoomResponseLambda;
	void CallJoinRoom(const FGrpcLobbyJoinRoomRequest& Request, FJoinRoomResponseLambda ResponseLambda, FGrpcMetaData MetaData = FGrpcMetaData(), float DeadLineSeconds = 0.f);

	typedef TFunction<void(const FGrpcResult& GrpcResult, const FGrpcLobbyGetRoomListResponse& Response)> FGetRoomListResponseLambda;
	void CallGetRoomList(const FGrpcLobbyGetRoomListRequest& Request, FGetRoomListResponseLambda ResponseLambda, FGrpcMetaData MetaData = FGrpcMetaData(), float DeadLineSeconds = 0.f);

	typedef TFunction<void(const FGrpcResult& GrpcResult, const FGrpcLobbyUpdateRoomInfoResponse& Response)> FUpdateRoomInfoResponseLambda;
	void CallUpdateRoomInfo(const FGrpcLobbyUpdateRoomInfoRequest& Request, FUpdateRoomInfoResponseLambda ResponseLambda, FGrpcMetaData MetaData = FGrpcMetaData(), float DeadLineSeconds = 0.f);

public:
	class Private;
	Private* const d = nullptr;

public:
	ULobbyService();
	virtual ~ULobbyService();
};

